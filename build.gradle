/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.5/samples
 */

buildscript {
    repositories {
        mavenLocal()
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
            classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
version = '1.0.0'
group = 'net.enriquitomc.mods.helium' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'helium'

minecraft {

    mappings channel: 'official', version: '1.19.2'
    
     runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                helium {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                helium {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'helium', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
               helium {
                    source sourceSets.main
                }
            }
        }
    }
    
    }
    
    sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories{


mavenLocal()
google()

//Use Fabric repository for getting libraries


maven {

url "https://maven.fabricmc.net"

}

	maven { url 'https://jitpack.io' }
    	maven { url 'https://modmaven.dev' }
        	maven { url 'https://maven.tterrag.com' }

}

  configurations {

      installer.extendsFrom(implementation,compile)
mappings.extendsFrom(implementation)
    }
    dependencies {
    //Some stuff are of the Forge modloader
    minecraft 'net.minecraft:client:1.19.2'
    mappings 'net.fabricmc:yarn:1.19.2+build.28:v2'
        implementation 'org.ow2.asm:asm:9.1'
        implementation 'org.ow2.asm:asm-commons:9.1'
        implementation 'org.ow2.asm:asm-tree:9.1'
        implementation 'org.ow2.asm:asm-util:9.1'
        implementation 'org.ow2.asm:asm-analysis:9.1'
  implementation 'com.github.sp614x:LegacyLauncher:master-SNAPSHOT'
implementation "cpw.mods:bootstraplauncher:1.1.2"
        compileOnly 'cpw.mods:modlauncher:10.0.8'
        implementation 'net.minecraftforge:accesstransformers:3.0.1'
        implementation 'org.antlr:antlr4-runtime:4.9.1' //Dep of AccessTransformer
implementation 'com.mojang:brigadier:1.0.18'
        implementation 'com.mojang:datafixerupper:5.0.28'
        implementation 'com.mojang:blocklist:1.0.10'
        implementation 'com.mojang:patchy:2.2.10'
        implementation 'com.mojang:javabridge:1.1.23'
        implementation 'com.mojang:text2speech:1.13.9'
        compileOnly 'com.mojang:authlib:3.11.50'
        implementation 'com.electronwill.night-config:core:3.6.3'
        implementation 'com.electronwill.night-config:toml:3.6.3'
        implementation 'com.electronwill.night-config:json:3.6.3'
        implementation 'io.netty:netty-all:4.1.77.Final'
        implementation 'it.unimi.dsi:dsiutils:2.7.2'
        implementation 'it.unimi.dsi:fastutil:8.5.6'

        implementation 'org.jline:jline:3.12.+'
        implementation 'org.apache.maven:maven-artifact:3.6.3'
        implementation 'net.jodah:typetools:0.8.3'
        implementation 'org.apache.logging.log4j:log4j-api:2.17.1'

        implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
        implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.17.1'
        implementation 'org.slf4j:slf4j-api:1.8.0-beta4'

        implementation 'com.mojang:logging:1.0.0'
        implementation 'net.minecrell:terminalconsoleappender:1.2.0'
        implementation 'net.sf.jopt-simple:jopt-simple:5.0.4'
        implementation 'net.fabricmc:sponge-mixin:0.11.4+mixin.0.8.5'
        installer 'org.codehaus.plexus:plexus-archiver:2.1'
        // This is org.openjdk.nashorn:nashorn-core:15.1.1 repackaged so it doesn't crash on JREs < 15.
        // See: https://github.com/LexManos/NashornLegacyPackager
        implementation 'net.minecraftforge:nashorn-core-compat:15.1.1.1'
        implementation 'com.google.guava:guava:21.0'
        implementation 'com.google.code.gson:gson:2.8.0'
        implementation 'org.lwjgl:lwjgl:3.3.1'
        implementation 'org.lwjgl:lwjgl-glfw:3.3.1'
        implementation 'org.lwjgl:lwjgl-opengl:3.3.1'
       implementation 'org.lwjgl:lwjgl-stb:3.3.1'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testImplementation 'org.junit.vintage:junit-vintage-engine:5.+'
        testImplementation 'org.opentest4j:opentest4j:1.2.0' // needed for junit 5
        testImplementation 'org.hamcrest:hamcrest-all:1.3' // needs advanced matching for list order
    }


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/HeliumMinecraft/helium")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
	publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
}
