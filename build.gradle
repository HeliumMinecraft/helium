/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.5/samples
 */

buildscript {
    repositories {
        mavenLocal()
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
            classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'

version = '1.0'
group = 'net.enriquitomc.mods.helium' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'helium'

minecraft {

    mappings channel: 'snapshot', version: '20210309-1.16.5'
    
     runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                helium {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            mods {
                helium {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be changed as needed.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'helium', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
               helium {
                    source sourceSets.main
                }
            }
        }
    }
    
    }
    
    sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories{


mavenLocal()
google()

//Use Fabric repository for getting libraries


maven {

url "https://maven.fabricmc.net"

}



}

  configurations {
        installer {
            transitive = false //Don't pull all libraries, if we're missing something, add it to the installer list so the installer knows to download it.
        }
        api.extendsFrom(installer)
        fmllauncherImplementation.extendsFrom(installer, implementation)
    }
    dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.0'
        installer 'org.ow2.asm:asm:9.1'
        installer 'org.ow2.asm:asm-commons:9.1'
        installer 'org.ow2.asm:asm-tree:9.1'
        installer 'org.ow2.asm:asm-util:9.1'
        installer 'org.ow2.asm:asm-analysis:9.1'
        installer 'cpw.mods:modlauncher:8.1.3'
        installer 'cpw.mods:grossjava9hacks:1.3.3'
        installer 'net.minecraftforge:accesstransformers:3.0.1'
        installer 'org.antlr:antlr4-runtime:4.9.1' //Dep of AccessTransformer
        installer 'net.minecraftforge:eventbus:4.0.+'
        installer 'net.minecraftforge:forgespi:' + SPI_VERSION
        installer 'net.minecraftforge:coremods:4.0.+'
        installer 'net.minecraftforge:unsafe:0.2.+'
        installer 'com.electronwill.night-config:core:3.6.3'
        installer 'com.electronwill.night-config:toml:3.6.3'
        installer 'org.jline:jline:3.12.+'
        installer 'org.apache.maven:maven-artifact:3.6.3'
        installer 'net.jodah:typetools:0.8.3'
        installer 'org.apache.logging.log4j:log4j-api:2.15.0' //TODO: Unpin in 1.18.1 or when Mojang bumps the Log4J version
        installer 'org.apache.logging.log4j:log4j-core:2.15.0' //TODO: Unpin in 1.18.1 or when Mojang bumps the Log4J version
        installer 'org.apache.logging.log4j:log4j-slf4j18-impl:2.15.0' //TODO: Unpin in 1.18.1 or when Mojang bumps the Log4J version
        installer 'net.minecrell:terminalconsoleappender:1.2.0'
        installer 'net.sf.jopt-simple:jopt-simple:5.0.4'
        installer 'org.spongepowered:mixin:0.8.4'
        // This is org.openjdk.nashorn:nashorn-core:15.1.1 repackaged so it doesn't crash on JREs < 15.
        // See: https://github.com/LexManos/NashornLegacyPackager
        installer 'net.minecraftforge:nashorn-core-compat:15.1.1.1'
        fmllauncherImplementation 'com.google.guava:guava:21.0'
        fmllauncherImplementation 'com.google.code.gson:gson:2.8.0'
        fmllauncherImplementation 'org.lwjgl:lwjgl:3.2.2'
        fmllauncherImplementation 'org.lwjgl:lwjgl-glfw:3.2.2'
        fmllauncherImplementation 'org.lwjgl:lwjgl-opengl:3.2.2'
        fmllauncherImplementation 'org.lwjgl:lwjgl-stb:3.2.2'
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testImplementation 'org.junit.vintage:junit-vintage-engine:5.+'
        testImplementation 'org.opentest4j:opentest4j:1.2.0' // needed for junit 5
        testImplementation 'org.hamcrest:hamcrest-all:1.3' // needs advanced matching for list order
    }


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/HeliumMinecraft/helium")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
}
